---
- name: check tar.gz file
  delegate_to: "127.0.0.1"
  run_once: true
  command: ls {{item}}
  with_items:
    - "{{software_path}}/zabbix-{{zabbix_version}}.tar.gz"
  ignore_errors: true
  register: file_exist

# - name: check directroy
#   delegate_to: "127.0.0.1"
#   run_once: true
#   command: ls {{item}}
#   with_items:
#     - "{{software_path}}/zabbix-{{zabbix_version}}"
#     - "{{software_path}}/automake-{{automake_version}}"
#   ignore_errors: true
#   register: directroy_exist

- name: download zabbix {{zabbix_version}}
  delegate_to: "127.0.0.1"
  run_once: true
  get_url: url="https://nchc.dl.sourceforge.net/project/zabbix/ZABBIX%20Latest%20Stable/{{zabbix_version}}/zabbix-{{zabbix_version}}.tar.gz"
                        dest="{{software_path}}/zabbix-{{zabbix_version}}.tar.gz"
                        validate_certs=no
  when: file_exist['results'][0]['failed']

# - name: unarchive zabbix
#   delegate_to: "127.0.0.1"
#   run_once: true
#   unarchive: src="{{software_path}}/zabbix-{{zabbix_version}}.tar.gz"
#                           dest="{{software_path}}"
#                           copy=yes

# - name: download automake {{automake_version}}
#   delegate_to: "127.0.0.1"
#   run_once: true
#   get_url: url="http://ftp.gnu.org/gnu/automake/automake-{{automake_version}}.tar.gz"
#                         dest="{{software_path}}/automake-{{automake_version}}.tar.gz"
#                         validate_certs=no
#   when: file_exist['results'][1]['failed']

# - name: unarchive automake
#   delegate_to: "127.0.0.1"
#   run_once: true
#   unarchive: src="{{software_path}}/automake-{{automake_version}}.tar.gz"
#                           dest="{{software_path}}"
#                           copy=yes

- name: check remote directroy
  command: ls {{item}}
  with_items:
    - "{{remote_software_path}}/zabbix-{{zabbix_version}}"
  ignore_errors: true
  register: remote_directroy_exist

- name: check remote tar.gz file
  delegate_to: "127.0.0.1"
  run_once: true
  command: ls {{item}}
  with_items:
    - "{{software_path}}/zabbix-{{zabbix_version}}.tar.gz"
  ignore_errors: true
  register: remote_file_exist

- name: copy zabbix file
  copy: src="{{software_path}}/zabbix-{{zabbix_version}}.tar.gz" dest={{remote_software_path}}
  when: remote_directroy_exist['results'][0]['failed'] and remote_file_exist['results'][0]['failed']

- name: unarchive
  unarchive: src={{item}} dest="{{software_path}}" copy=yes
  with_items:
    - "{{software_path}}/zabbix-{{zabbix_version}}.tar.gz"

- name: change file mode
  file: mode="u+rwx" path={{item}}/configure
  with_items:
    - "{{remote_software_path}}/zabbix-{{zabbix_version}}"

- name: add zabbix group
  command: groupadd zabbix

- name: add zabbix user
  command: useradd -g zabbix zabbix

- name: install requirements
  yum: name={{ item }} state=installed
  with_items:
   - libcurl-devel
   - libxml2-devel
   - net-snmp-devel
   - make
   - gcc
   - mysql-devel
   - unixODBC-devel
   - libevent-devel

- name: start mariadb
  service: name=mariadb state=started

- name: init sql
  mysql_db: state=import login_user={{db_user}} login_password={{db_password}} target={{item}} name={{db_name}} login_host={{ groups['master_dbserver'][0] }}
  with_items:
    - "{{remote_software_path}}/zabbix-{{zabbix_version}}/database/mysql/schema.sql"
    - "{{remote_software_path}}/zabbix-{{zabbix_version}}/database/mysql/images.sql"
    - "{{remote_software_path}}/zabbix-{{zabbix_version}}/database/mysql/data.sql"
  ignore_errors: true

- name: configure zabbix
  command: chdir="{{remote_software_path}}/zabbix-{{zabbix_version}}" ./configure --enable-server --with-mysql --enable-ipv6 --with-net-snmp --with-libcurl --with-libxml2

- name: install
  make: chdir="{{remote_software_path}}/zabbix-{{zabbix_version}}" target=install

- name: change zabbix conf
  template: src=zabbix_server.conf.j2 dest=/usr/local/etc/zabbix_server.conf
